{"ast":null,"code":"var _jsxFileName = \"/Users/jonasmaciel/Dev/JavaScript_GoStack/Challengers_Js/Challenger_ReactJs_Concepts_MD-01/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport api from \"./services/api\";\nimport \"./styles.css\";\n\nfunction App() {\n  //LISTANDO REPOSITORIOS\n  const [repositoriesList, setRepositories] = useState([]);\n  useEffect(() => {\n    api.get('/repositories').then(response => {\n      setRepositories(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post('/repositories', {\n      title: \"Repository_Jonas\",\n      url: 'http://github.com/jonasfm1',\n      techs: [\"ReactJs\"]\n    });\n    const newRepositorie = response.data;\n    setRepositories([...repositoriesList, newRepositorie]);\n  }\n\n  async function handleRemoveRepository(id) {\n    await api.delete(`repositories/${id}`);\n    setRepositories(repositoriesList.filter(repositorie => repositorie.id !== id));\n  } // id, title, url, likes, techs\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, repositoriesList.map(repositorie => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: repositorie.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: repositorie.url,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, repositorie.title)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"Likes:\", repositorie.likes)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleRemoveRepository(repositorie.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Remover\"));\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jonasmaciel/Dev/JavaScript_GoStack/Challengers_Js/Challenger_ReactJs_Concepts_MD-01/src/App.js"],"names":["React","useEffect","useState","api","App","repositoriesList","setRepositories","get","then","response","data","handleAddRepository","post","title","url","techs","newRepositorie","handleRemoveRepository","id","delete","filter","repositorie","map","likes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AAEb;AACA,QAAM,CAACC,gBAAD,EAAmBC,eAAnB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBC,IAAzB,CAA8BC,QAAQ,IAAI;AACxCH,MAAAA,eAAe,CAACG,QAAQ,CAACC,IAAV,CAAf;AACD,KAFD;AAGD,GAJQ,EAIP,EAJO,CAAT;;AAMA,iBAAeC,mBAAf,GAAqC;AACnC,UAAMF,QAAQ,GAAG,MAAMN,GAAG,CAACS,IAAJ,CAAS,eAAT,EAA0B;AAC/CC,MAAAA,KAAK,EAAE,kBADwC;AAE/CC,MAAAA,GAAG,EAAE,4BAF0C;AAG/CC,MAAAA,KAAK,EAAE,CAAC,SAAD;AAHwC,KAA1B,CAAvB;AAMA,UAAMC,cAAc,GAAGP,QAAQ,CAACC,IAAhC;AACAJ,IAAAA,eAAe,CAAC,CAAC,GAAGD,gBAAJ,EAAsBW,cAAtB,CAAD,CAAf;AACD;;AAED,iBAAeC,sBAAf,CAAsCC,EAAtC,EAA0C;AACxC,UAAMf,GAAG,CAACgB,MAAJ,CAAY,gBAAeD,EAAG,EAA9B,CAAN;AAEAZ,IAAAA,eAAe,CAACD,gBAAgB,CAACe,MAAjB,CAAwBC,WAAW,IAAIA,WAAW,CAACH,EAAZ,KAAmBA,EAA1D,CAAD,CAAf;AACD,GAzBY,CA0Bb;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,gBAAgB,CAACiB,GAAjB,CAAqBD,WAAW,IAAI;AACnC,wBAAO;AAAI,MAAA,GAAG,EAAEA,WAAW,CAACH,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAG,MAAA,IAAI,EAAEG,WAAW,CAACP,GAArB;AAA0B,MAAA,MAAM,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CO,WAAW,CAACR,KAAvD,CAAJ,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACSQ,WAAW,CAACE,KADrB,CAJF,CAFK,eAWL;AAAQ,MAAA,OAAO,EAAE,MAAMN,sBAAsB,CAACI,WAAW,CAACH,EAAb,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXK,CAAP;AAgBD,GAjBA,CADH,CADF,eAsBE;AAAQ,IAAA,OAAO,EAAEP,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtBF,CADF;AA0BD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useEffect, useState} from \"react\";\nimport api from \"./services/api\";\n\nimport \"./styles.css\";\n\nfunction App() {\n\n  //LISTANDO REPOSITORIOS\n  const [repositoriesList, setRepositories] = useState([]);\n  useEffect(() => {\n    api.get('/repositories').then(response => {\n      setRepositories(response.data)\n    });\n  },[]);\n\n  async function handleAddRepository() {\n    const response = await api.post('/repositories', {\n      title: \"Repository_Jonas\",\n      url: 'http://github.com/jonasfm1',\n      techs: [\"ReactJs\"]\n    })\n\n    const newRepositorie = response.data;\n    setRepositories([...repositoriesList, newRepositorie]);\n  }\n\n  async function handleRemoveRepository(id) {\n    await api.delete(`repositories/${id}`)\n\n    setRepositories(repositoriesList.filter(repositorie => repositorie.id !== id));\n  }\n  // id, title, url, likes, techs\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n        {repositoriesList.map(repositorie => {\n          return <li key={repositorie.id}>\n\n            <ul>\n              <li><a href={repositorie.url} target=\"_blank\">{repositorie.title}</a>\n              </li>\n              \n              <li>\n                Likes:{repositorie.likes}\n              </li>\n            </ul>\n\n            <button onClick={() => handleRemoveRepository(repositorie.id)}>\n              Remover\n            </button>\n          \n          </li>\n        })}\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}